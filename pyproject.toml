[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gitsync"
version = "0.2.0"
description = "Synchronize GitHub repositories when git access is blocked"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "GitSync Tool"},
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "requests>=2.31.0",
    "playwright>=1.40.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.66.0",
    "certifi>=2023.0.0",
]

[project.scripts]
gitsync = "gitsync.cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-requests>=2.31.0",
    "types-pyyaml>=6.0",
    "types-tqdm>=4.66.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-material-extensions>=1.3.0",
    "pymdown-extensions>=10.5",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocstrings[python]>=0.24.0",
]
pac = ["pypac>=0.16.0"]
win = [
    "wincertstore>=0.2.0; sys_platform == 'win32'",
    "pywin32>=300; sys_platform == 'win32'",
]

[tool.ruff]
line-length = 120
target-version = "py37"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B"]
ignore = ["E501"]  # line too long - handled by formatter

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=gitsync --cov-report=term-missing"

[tool.coverage.run]
source = ["gitsync"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]
