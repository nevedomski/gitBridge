name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    name: üß™ Tests (Python ${{ matrix.python }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/uv
            ~/AppData/Local/uv/cache
          key: ${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python }}-
            ${{ runner.os }}-
      
      - name: Install uv (universal installer)
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --all-extras
              
      - name: üî¨ Unit tests with coverage
        shell: bash
        run: |
          # Run platform-specific tests based on the OS
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            # On Windows, run all tests including Windows-specific ones
            uv run pytest --cov=gitbridge --cov-report=xml --junitxml=junit.xml
          elif [[ "${{ runner.os }}" == "Linux" ]]; then
            # On Linux, skip Windows-specific tests
            uv run pytest --cov=gitbridge --cov-report=xml --junitxml=junit.xml -m "not windows"
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            # On macOS, skip Windows-specific tests
            uv run pytest --cov=gitbridge --cov-report=xml --junitxml=junit.xml -m "not windows"
          else
            # Fallback - skip Windows-specific tests
            uv run pytest --cov=gitbridge --cov-report=xml --junitxml=junit.xml -m "not windows"
          fi

      - name: üìä Upload coverage to Codecov
        uses: codecov/codecov-action@v5
      
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1

  lint:
    name: üßπ Lint & Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
            
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
          key: ${{ runner.os }}-uv-lint-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-lint-
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync --dev
      
      - name: üõë Ruff check
        uses: astral-sh/ruff-action@v3 # Use the official action
        with:
          args: "check --select F,E" # Pass the args to ruff check

      # --- Ruff "format" check (no diffs allowed)
      - name: üé® Ruff format
        uses: astral-sh/ruff-action@v3 # Use the official action
        with:
          args: "format --check --diff" # Pass the args to ruff format

      # --- MyPy type‚Äêcheck
      - name: üìê MyPy
        run: uv run mypy .

  security:
    name: üîí Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: üîç Run safety check
        run: |
          uv add --dev safety
          uv run safety check --json
        continue-on-error: true

  build:
    name: üì¶ Build Package
    runs-on: ubuntu-latest
    needs: [tests, lint]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Build package
        run: uv build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7