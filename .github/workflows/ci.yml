name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Tests (Python ${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ matrix.python }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python }}-
            ${{ runner.os }}-uv-
      
      - name: Install dependencies
        run: |
          uv sync --dev
          # Install playwright browsers for browser automation tests
          uv run playwright install chromium
      
      - name: 🛑 Ruff check
        run: uv run ruff check . --output-format=github
      
      - name: 🎨 Ruff format
        run: uv run ruff format --check --diff .
      
      - name: 📐 MyPy type checking
        run: uv run mypy .
      
      - name: 🔬 Unit tests with coverage
        run: uv run pytest --maxfail=1 --disable-warnings --cov=gitsync --cov-report=xml --cov-report=term-missing
      
      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: 🧹 Lint & Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-3.11-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.11-
            ${{ runner.os }}-uv-
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: 🛑 Ruff lint
        run: uv run ruff check . --output-format=github
      
      - name: 🎨 Ruff format check
        run: uv run ruff format --check --diff .
      
      - name: 📐 MyPy type checking
        run: uv run mypy .

  security:
    name: 🔒 Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: 🔍 Run safety check
        run: |
          uv add --dev safety
          uv run safety check --json
        continue-on-error: true

  build:
    name: 📦 Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Build package
        run: uv build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7