name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    name: 🧪 Tests (Python ${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python }}-
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev, docs, pac]"
          # Install playwright browsers for browser automation tests
          python -m playwright install chromium
    
      - name: 🔬 Unit tests with coverage
        run: python -m pytest --maxfail=1 --disable-warnings --cov=gitsync --cov-report=xml --cov-report=xml

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: 🧹 Lint & Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
            
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.11-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.11-
            ${{ runner.os }}-pip-

      - name: Install tools
        run: pip install ruff mypy
      
      - name: 🛑 Ruff check
        uses: astral-sh/ruff-action@v3 # Use the official action
        with:
          args: "check --select F,E" # Pass the args to ruff check

      # --- Ruff "format" check (no diffs allowed)
      - name: 🎨 Ruff format
        uses: astral-sh/ruff-action@v3 # Use the official action
        with:
          args: "format --check --diff" # Pass the args to ruff format

      # --- MyPy type‐check
      - name: 📐 MyPy
        run: mypy .

  security:
    name: 🔒 Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: 🔍 Run safety check
        run: |
          uv add --dev safety
          uv run safety check --json
        continue-on-error: true

  build:
    name: 📦 Build Package
    runs-on: ubuntu-latest
    needs: [tests, lint]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Build package
        run: uv build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7